import './globals.css';
import type { Metadata } from 'next';
import { Inter } from 'next/font/google';
import { Providers } from './Providers';
import { dir } from 'i18next';
import AppBar from '@mui/material/AppBar';
import Toolbar from '@mui/material/Toolbar';
import { Typography } from '@mui/material';
import { useTranslation } from '../i18n';
import Search from './components/Search';
import * as React from 'react';
import useScrollTrigger from '@mui/material/useScrollTrigger';
import { Lang } from './api/types';
import { TopBar } from './components/TopBar';

const languages = ['eng', 'rus', 'lez'];

export async function generateStaticParams() {
  return languages.map((lang) => ({ lang }));
}

const inter = Inter({ subsets: ['latin'] });

export const metadata: Metadata = {
  title: 'Gafargan dictionary',
  description: 'Generated by create next app',
};

type RootLayoutProps = {
  children: React.ReactNode;
  params: { lang: string };
  searchParams: { fromLang: string; toLang: string };
};

export default async function RootLayout(props: RootLayoutProps) {
  const {
    children,
    params: { lang },
    searchParams,
  } = props;
  const { t } = await useTranslation(lang);
  const selectedLanguages = {
    from: (searchParams?.fromLang ?? 'lez') as Lang,
    to: (searchParams?.toLang ?? 'rus') as Lang,
  };
  return (
    <html lang={lang} dir={dir(lang)}>
      <body className={inter.className}>
        <TopBar {...props} />
        <Toolbar />
        <Providers>{children}</Providers>
      </body>
    </html>
  );
}
